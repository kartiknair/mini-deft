extern fun read_file_c(path [u8]) [u8];
extern fun write_file_c(path [u8], contents [u8]);
extern fun timestamp_c() u64
extern fun timestamp_to_string_c(timestamp u64) [u8]
extern fun u64_to_string_c(number u64) [u8]
extern fun i64_to_string_c(number i64) [u8]
extern fun f64_to_string_c(number f64) [u8]
extern fun print_c(string [u8])
extern fun println_c(string [u8])

export fun read_file(path [u8]) [u8] {
    return read_file_c(path)
}

export fun write_file(path [u8], contents [u8]) {
    write_file_c(path, contents)
}

export struct Datetime {
    epoch u64
}

export fun datetime() Datetime {
    return Datetime {
        epoch: timestamp_c(),
    }
}

// Stringify functions

export fun to_string() [u8] for Datetime {
    return timestamp_to_string_c(self.epoch)
}

export fun to_string() [u8] for i8 {
    return i64_to_string_c(self as i64)
}

export fun to_string() [u8] for i16 {
    return i64_to_string_c(self as i64)
}

export fun to_string() [u8] for i32 {
    return i64_to_string_c(self as i64)
}

export fun to_string() [u8] for i64 {
    return i64_to_string_c(self)
}

export fun to_string() [u8] for u8 {
    return u64_to_string_c(self as u64)
}

export fun to_string() [u8] for u16 {
    return u64_to_string_c(self as u64)
}

export fun to_string() [u8] for u32 {
    return u64_to_string_c(self as u64)
}

export fun to_string() [u8] for u64 {
    return u64_to_string_c(self)
}

export fun to_string() [u8] for f32 {
    return f64_to_string_c(self as f64)
}

export fun to_string() [u8] for f64 {
    return f64_to_string_c(self)
}

export fun print(string [u8]) {
    print_c(string)
}

export fun println(string [u8]) {
    println_c(string)
}
